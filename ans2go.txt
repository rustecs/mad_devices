
$cat prof.go
package main

import (
	"fmt"
	"time"
)

func factorial(value int) int {
	if value == 1 {
		return 1
	}
	return value * factorial(value-1)
}

func main() {
	done := time.After(3 * time.Second)
	for {
		select {
		case <-done:
			fmt.Println("over")
			return
		default:
			factorial(20)
		}
	}
  // call factorial(2) enought we will prof with bench
}


$cat prof_test.go
package main

import "testing"

func BenchmarkFactotial(b *testing.B) {
	for i := 0; i < 100000; i++ {
		t := factorial(20) - factorial(20) + factorial(10) - factorial(10) 
		factorial(t + 4)
	}

}


$ echo "list factorial" |  go tool pprof  testprof.test proff.cpu --text | awk  '$3~/^[0-9]+:$/ && $1~/[0-9]{2,}m?s/ {print }' 
